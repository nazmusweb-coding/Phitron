# Write the time complexity of each of the code segments shown below.

Time complexity = O(logn)
int k = 1;
while(k <= n)
{
	cout << k << endl;
	k = k * 2;
}

Time complexity = O(n^2)
for (int i = 0; i < n; i++)
{
	for (int j = i; j > 0; j--)
	{
		cout << i << j;
	}
}

Time complexity = O(n^3)
for (int i = 0; i < n; i++)
{
	for (int j = i; j > 0; j--)
	{
		for(int k=j; k > 0; k--)
		{
			cout << i << j << k;
		}
	}
}

Time complexity = O(nlogn)
for(int i = n/2; i <= n; i++)
{
	for(int j=1; j <= n; j=j*2)
	{
   		cout<< i << j << endl;
	}
}

Time complexity = O(nlogn)
for(int i=n/2; i<=n; i++)
{
	for(int j=1; j <= n; j=j+i)
	{
   		cout<<i<<j<<endl;
	}
}
